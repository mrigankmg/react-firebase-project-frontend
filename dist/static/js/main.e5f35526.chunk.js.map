{"version":3,"sources":["firebase.js","constants/colours.js","contexts/AuthContext.js","components/PlayerTile.js","components/Lobby.js","constants/routes.js","components/SignUp.js","components/LogIn.js","components/SignUpLogInContainer.js","components/PrivateRoute.js","components/NonPrivateRoute.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","functions","firestore","storage","colours","label","value","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","error","setError","allPlayers","setAllPlayers","currentUser","setCurrentUser","dataLoaded","setDataLoaded","loading","setLoading","location","useLocation","useEffect","dataToBeLoadedCount","decreaseDataToBeLoadedCount","unsubscribeAuthStateChange","onAuthStateChanged","user","unsubscribeGetPlayersCollection","collection","orderBy","onSnapshot","snapshot","players","forEach","doc","push","data","id","loadingWrapper","callback","a","logIn","email","password","signInWithEmailAndPassword","message","logOut","signOut","signUp","name","createUserWithEmailAndPassword","httpsCallable","Provider","CircularProgress","sx","position","left","top","WebkitTransform","transform","PlayerTile","colour","photoDownloadUrl","colourPickerDisabled","setColourPickerDisabled","browseFilesDisabled","setBrowseFilesDisabled","photoInputRef","useRef","handleColourChange","e","preventDefault","target","handleImageChange","fileList","files","length","file","Set","has","type","storageRef","ref","extension","split","fileRef","child","uid","put","getDownloadURL","url","availableColours","nonLoggedInPlayerColours","player","add","filter","Card","maxWidth","margin","CardContent","backgroundColor","padding","borderBottom","Avatar","alt","src","height","width","cursor","onClick","current","click","disabled","accept","onChange","hidden","Typography","variant","color","textAlign","wordBreak","marginTop","CardActions","FormControl","fullWidth","InputLabel","Select","labelId","map","idx","MenuItem","Lobby","Container","paddingTop","Button","right","Box","Alert","severity","marginBottom","loggedInPlayer","find","renderPlayerTile","List","listItems","doesPlayerHaveColour","listItemBackgroundColour","Fragment","ListItem","alignItems","display","paddingBlock","ListItemAvatar","marginRight","ListItemText","primary","renderNonLoggedInPlayersListItems","SignUp","nameRef","emailRef","passwordRef","reEnteredPasswordRef","onSubmit","FormGroup","FormLabel","TextField","inputRef","required","disableElevation","to","LogIn","SignUpLogInContainer","justifyContent","minHeight","marginBlock","pathname","PrivateRoute","NonPrivateRoute","theme","createTheme","typography","fontFamily","ReactDOM","render","StrictMode","ThemeProvider","exact","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.e5f35526.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\"\r\nimport \"firebase/compat/functions\"\r\nimport \"firebase/compat/firestore\"\r\nimport \"firebase/compat/storage\"\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport const functions = app.functions()\r\nexport const firestore = app.firestore()\r\nexport const storage = app.storage()\r\nexport default app","export const colours = [\r\n    {\r\n        label: \"Firebrick\",\r\n        value: \"#B22222\"\r\n    },\r\n    {\r\n        label: \"Light Blue\",\r\n        value: \"#ADD8E6\"\r\n    },\r\n    {\r\n        label: \"Sage Green\",\r\n        value: \"#535E4B\"\r\n    },\r\n    {\r\n        label: \"Antique White\",\r\n        value: \"#FAEBD7\"\r\n    },\r\n    {\r\n        label: \"Dark Salmon\",\r\n        value: \"#E9967A\"\r\n    },\r\n    {\r\n        label: \"Gold\",\r\n        value: \"#FFD700\"\r\n    },\r\n    {\r\n        label: \"Royal Blue\",\r\n        value: \"#4169E1\"\r\n    },\r\n    {\r\n        label: \"Orange Red\",\r\n        value: \"#FF4500\"\r\n    },\r\n    {\r\n        label: \"Byzantium\",\r\n        value: \"#702963\"\r\n    },\r\n    {\r\n        label: \"Coffee\",\r\n        value: \"#6F4E37\"\r\n    }\r\n]","import React, {\r\n    useContext,\r\n    useState,\r\n    useEffect\r\n} from 'react'\r\nimport { \r\n    auth,\r\n    functions,\r\n    firestore\r\n} from '../firebase'\r\nimport { CircularProgress } from '@mui/material'\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [error, setError] = useState()\r\n    const [allPlayers, setAllPlayers] = useState([])\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [dataLoaded, setDataLoaded] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const location = useLocation()\r\n\r\n    useEffect(() => {\r\n        let dataToBeLoadedCount = 2\r\n        const decreaseDataToBeLoadedCount = () => {\r\n            dataToBeLoadedCount -= 1\r\n            if (dataToBeLoadedCount === 0) {\r\n                setDataLoaded(true)\r\n            }\r\n        }\r\n\r\n        const unsubscribeAuthStateChange = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            decreaseDataToBeLoadedCount()\r\n        })\r\n\r\n        const unsubscribeGetPlayersCollection = firestore.collection('players')\r\n            .orderBy(\"createdAt\")\r\n            .onSnapshot(snapshot => {\r\n                const players = []\r\n                snapshot.forEach(doc => {\r\n                    players.push({\r\n                        ...doc.data(),\r\n                        id: doc.id\r\n                    })\r\n                })\r\n                setAllPlayers(players)\r\n                decreaseDataToBeLoadedCount()\r\n            })\r\n        \r\n        return () => {\r\n            unsubscribeAuthStateChange()\r\n            unsubscribeGetPlayersCollection()\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setError('')\r\n    }, [location])\r\n\r\n    const loadingWrapper = async callback => {\r\n        setLoading(true)\r\n        await callback()\r\n        setLoading(false)\r\n    }\r\n\r\n    const signUp = (name, email, password) => {\r\n        loadingWrapper(async () => {\r\n            try {\r\n                await auth.createUserWithEmailAndPassword(email, password)\r\n                await functions.httpsCallable('addPlayerRecord')({ name })\r\n            } catch (err) {\r\n                setError(err.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    const logIn = async (email, password) => {\r\n        loadingWrapper(async () => {\r\n            try {\r\n                await auth.signInWithEmailAndPassword(email, password)\r\n            } catch (err) {\r\n                setError(err.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    const logOut = async () => {\r\n        loadingWrapper(async () => {\r\n            try {\r\n                await auth.signOut()\r\n            } catch (err) {\r\n                setError(err.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    const value = { \r\n        currentUser,\r\n        allPlayers,\r\n        error,\r\n        setError,\r\n        signUp,\r\n        logIn,\r\n        logOut\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={ value }>\r\n            { dataLoaded && !loading ? children : \r\n                <CircularProgress\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        left: '50%',\r\n                        top: '50%',\r\n                        WebkitTransform: 'translate(-50%, -50%)',\r\n                        transform: 'translate(-50%, -50%)'\r\n                    }}/>\r\n            }\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { \r\n    useState,\r\n    useRef\r\n} from 'react'\r\nimport { \r\n    Card,\r\n    Avatar,\r\n    CardActions,\r\n    CardContent,\r\n    Typography,\r\n    Select,\r\n    MenuItem,\r\n    InputLabel,\r\n    FormControl\r\n} from '@mui/material';\r\nimport {\r\n    functions,\r\n    storage\r\n} from '../firebase'\r\nimport { colours } from '../constants/colours'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nconst PlayerTile = ({ colour, name, photoDownloadUrl }) => {\r\n    const[colourPickerDisabled, setColourPickerDisabled] = useState(false)\r\n    const[browseFilesDisabled, setBrowseFilesDisabled] = useState(false)\r\n    const { allPlayers, setError, currentUser } = useAuth()\r\n    const photoInputRef = useRef()\r\n\r\n    const handleColourChange = async e => {\r\n        e.preventDefault()\r\n        try {\r\n            setError('')\r\n            setColourPickerDisabled(true)\r\n            await functions.httpsCallable('changeColour')({ colour: e.target.value })\r\n        } catch {\r\n            setError('Unable to update colour.')\r\n        }\r\n        setColourPickerDisabled(false)\r\n    }\r\n\r\n    const handleImageClick = () => {\r\n        photoInputRef.current.click()\r\n    }\r\n\r\n    const handleImageChange = async e => {\r\n        const fileList = e.target.files;\r\n        if (fileList.length > 0) {\r\n            const file = fileList[0]\r\n            const acceptedFileTypes = new Set(['image/png', 'image/jpg', 'image/jpeg', 'image/gif'])\r\n            if (acceptedFileTypes.has(file.type)) {\r\n                setError('')\r\n                setBrowseFilesDisabled(true)\r\n                const storageRef = storage.ref()\r\n                const extension = file.name.split('.')[1]\r\n                const fileRef = storageRef.child(`${ currentUser.uid }.${ extension }`)\r\n                try {\r\n                    await fileRef.put(file)\r\n                    const url = await fileRef.getDownloadURL()\r\n                    await functions.httpsCallable('updatePhotoDownloadUrl')({ url })\r\n                } catch {\r\n                    setError('Unable to update picture.')\r\n                }\r\n                setBrowseFilesDisabled(false)\r\n            } else {\r\n                setError('Please select an image of type png/jpg/jpeg/gif.')\r\n            }\r\n        }\r\n    }\r\n\r\n    const availableColours = () => {\r\n        const nonLoggedInPlayerColours = new Set()\r\n        allPlayers.forEach(player => {\r\n            if (player.colour !== colour) {\r\n                nonLoggedInPlayerColours.add(player.colour)\r\n            }\r\n        })\r\n        return colours.filter(\r\n            colour => !nonLoggedInPlayerColours.has(colour.value)\r\n        )\r\n    }\r\n\r\n    const renderColourOptions = () => {\r\n        return availableColours().map((colour, idx) => \r\n            <MenuItem \r\n                value={colour.value}\r\n                key={`colour-${ idx }`}>\r\n                { colour.label }\r\n            </MenuItem>\r\n        )\r\n    }\r\n\r\n    const getBorder = () => {\r\n        if (colour === '' && availableColours().length > 0) {\r\n            return 'thin solid #606060'\r\n        }\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <Card sx={{ \r\n            maxWidth: '350px',\r\n            margin: \"auto\"\r\n        }}>\r\n            <CardContent\r\n                sx={{ \r\n                    backgroundColor: colour,\r\n                    padding: \"24px\",\r\n                    borderBottom: getBorder()\r\n                }}>\r\n                <Avatar\r\n                    alt={`${ name }'s avatar'`}\r\n                    src={ photoDownloadUrl } \r\n                    sx={{ \r\n                        height: '120px',\r\n                        width: '120px',\r\n                        '&:hover': {\r\n                            cursor: \"pointer\"\r\n                        },\r\n                        margin: 'auto'\r\n                    }}\r\n                    onClick={ handleImageClick } />\r\n                <input\r\n                    ref={ photoInputRef }\r\n                    disabled={ browseFilesDisabled }\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={ handleImageChange }\r\n                    hidden\r\n                />\r\n                <Typography\r\n                    variant=\"h5\"\r\n                    sx={{ \r\n                        color: colour === '' ? '#606060' : 'white',\r\n                        textAlign: 'center',\r\n                        wordBreak: 'break-all',\r\n                        margin: '0',\r\n                        marginTop: '20px'\r\n                    }}>\r\n                    { name }\r\n                </Typography>\r\n            </CardContent>\r\n            {\r\n                availableColours().length > 0 &&\r\n                <CardActions sx={{ padding: '20px' }}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"player-tile-label\">Colour</InputLabel>\r\n                        <Select\r\n                            disabled={ colourPickerDisabled }\r\n                            labelId=\"player-tile-label\"\r\n                            value={ colour }\r\n                            label=\"Colour\"\r\n                            onChange={ handleColourChange }>\r\n                            { renderColourOptions() }\r\n                        </Select>\r\n                    </FormControl>\r\n                </CardActions>\r\n            }\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PlayerTile","import { \r\n    Container,\r\n    Button,\r\n    Alert,\r\n    Box,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    Avatar\r\n} from '@mui/material';\r\nimport PlayerTile from './PlayerTile'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport React from 'react';\r\n\r\nconst Lobby = () => {\r\n    const { currentUser, allPlayers, logOut, error } = useAuth()\r\n\r\n    const renderPlayerTile = () => {\r\n        const loggedInPlayer = allPlayers.find(player => currentUser.uid === player.id)\r\n        if (loggedInPlayer) {\r\n            return (\r\n                <PlayerTile\r\n                    colour={ loggedInPlayer.colour }\r\n                    name={ loggedInPlayer.name }\r\n                    photoDownloadUrl={ loggedInPlayer.photoDownloadUrl }\r\n                    key={ loggedInPlayer.id } />\r\n            )\r\n        }\r\n        return null\r\n    }\r\n\r\n    const renderNonLoggedInPlayersListItems = () => {\r\n        const listItems = []\r\n        allPlayers.forEach(player =>{\r\n            if (player.id !== currentUser.uid) {\r\n                const doesPlayerHaveColour = player.colour !== ''\r\n                let listItemBackgroundColour = player.colour\r\n                if (!doesPlayerHaveColour) {\r\n                    listItemBackgroundColour = listItems.length % 2 === 0 ? '#F0F0F0' : 'white'\r\n                }\r\n                listItems.push(\r\n                    <React.Fragment key={ player.id }>\r\n                        <ListItem alignItems=\"flex-start\" sx={{\r\n                            backgroundColor: listItemBackgroundColour,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            paddingBlock: '24px'\r\n                        }}>\r\n                            <ListItemAvatar sx={{ margin: '0' }}>\r\n                                <Avatar\r\n                                    alt={`${ player.name }'s avatar'`}\r\n                                    src={ player.photoDownloadUrl } \r\n                                    sx={{\r\n                                        height: '50px',\r\n                                        width: '50px',\r\n                                        marginRight: '16px'\r\n                                    }}/>\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary={ player.name } sx={{\r\n                                color: doesPlayerHaveColour ? 'white' : '#606060',\r\n                                textAlign: 'center',\r\n                                wordBreak: 'break-all',\r\n                                margin: '0'\r\n                            }} />\r\n                        </ListItem>\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        })\r\n        return listItems\r\n    }\r\n\r\n    return (\r\n        <Container sx={{ \r\n            paddingTop: '20px',\r\n            position: 'relative'\r\n        }}>\r\n            <Button \r\n                sx={{ \r\n                    position: 'absolute',\r\n                    top: '20px',\r\n                    right: '20px'\r\n                }}\r\n                color=\"primary\"\r\n                variant=\"link\"\r\n                onClick={ logOut }>\r\n                Log Out\r\n            </Button>\r\n            <Box sx={{ marginTop: '50px'}}>\r\n                { \r\n                    error && \r\n                        <Alert \r\n                            severity=\"error\"\r\n                            sx={{ marginBottom: '20px' }}>\r\n                            { error }\r\n                        </Alert> \r\n                }\r\n                { renderPlayerTile() }\r\n                <List sx={{\r\n                    maxWidth: '500px',\r\n                    margin: '40px auto'\r\n                }}>\r\n                    { renderNonLoggedInPlayersListItems() }\r\n                </List>\r\n            </Box>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default Lobby","export const signUp = '/signup'\r\nexport const logIn = '/login'\r\nexport const lobby = '/'","import React, { useRef } from 'react'\r\nimport { \r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    FormGroup,\r\n    FormLabel,\r\n    TextField,\r\n    Button,\r\n    Alert\r\n} from '@mui/material';\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link } from 'react-router-dom'\r\nimport { logIn } from '../constants/routes'\r\n\r\nconst SignUp = () => {\r\n    const nameRef = useRef()\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const reEnteredPasswordRef = useRef()\r\n    const { signUp, error, setError } = useAuth()\r\n\r\n    const handleSignUp = e => {\r\n        e.preventDefault()\r\n        const password = passwordRef.current.value\r\n        const reEnteredPassword = reEnteredPasswordRef.current.value\r\n        if (password === reEnteredPassword) {\r\n            const name = nameRef.current.value\r\n            const email = emailRef.current.value\r\n            signUp(name, email, password)\r\n        } else {\r\n            setError(\"Passwords don't match.\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography\r\n                        variant=\"h3\"\r\n                        sx={{ textAlign: 'center' }}>\r\n                        Sign Up\r\n                    </Typography>\r\n                    { error && \r\n                        <Alert \r\n                            severity=\"error\"\r\n                            sx={{ marginTop: '20px' }}>\r\n                            { error }\r\n                        </Alert> \r\n                    }\r\n                    <form onSubmit={ handleSignUp }>\r\n                        <FormGroup \r\n                            id=\"first-name\"\r\n                            sx={{ marginTop: '20px' }}>\r\n                            <FormLabel>\r\n                                First Name\r\n                            </FormLabel>\r\n                            <TextField\r\n                                sx={{ marginTop: '10px' }}\r\n                                inputRef={ nameRef }\r\n                                variant=\"standard\"\r\n                                required />\r\n                        </FormGroup>\r\n                        <FormGroup \r\n                            id=\"email\"\r\n                            sx={{ marginTop: '20px' }}>\r\n                            <FormLabel>\r\n                                Email\r\n                            </FormLabel>\r\n                            <TextField\r\n                                type=\"email\"\r\n                                sx={{ marginTop: '10px' }}\r\n                                inputRef={ emailRef }\r\n                                variant=\"standard\"\r\n                                required />\r\n                        </FormGroup>\r\n                        <FormGroup \r\n                            id=\"password\"\r\n                            sx={{ marginTop: '20px' }}>\r\n                            <FormLabel>\r\n                                Password\r\n                            </FormLabel>\r\n                            <TextField\r\n                                type=\"password\"\r\n                                sx={{ marginTop: '10px' }}\r\n                                inputRef={ passwordRef }\r\n                                variant=\"standard\"\r\n                                required />\r\n                        </FormGroup>\r\n                        <FormGroup \r\n                            id=\"re-entered-password\"\r\n                            sx={{ marginTop: '20px' }}>\r\n                            <FormLabel>\r\n                                Confirm Password\r\n                            </FormLabel>\r\n                            <TextField\r\n                                type=\"password\"\r\n                                sx={{ marginTop: '10px' }}\r\n                                inputRef={ reEnteredPasswordRef }\r\n                                variant=\"standard\"\r\n                                required />\r\n                        </FormGroup>\r\n                        <Button \r\n                            fullWidth\r\n                            disableElevation\r\n                            sx={{ marginTop: '40px', paddingBlock: \"10px\" }}\r\n                            color=\"primary\"\r\n                            variant=\"outlined\"\r\n                            type=\"submit\">\r\n                            Sign Up\r\n                        </Button>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n            <Typography\r\n                variant=\"body1\"\r\n                sx={{ \r\n                    textAlign: 'center',\r\n                    margin: 0,\r\n                    marginTop: '20px'\r\n                }}>\r\n                Already have an account? <Link to={ logIn }>Log In</Link> \r\n            </Typography>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import React, { useRef } from 'react'\r\nimport { \r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    FormGroup,\r\n    FormLabel,\r\n    TextField,\r\n    Button,\r\n    Alert\r\n} from '@mui/material';\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link } from 'react-router-dom'\r\nimport { signUp } from '../constants/routes'\r\n\r\nconst LogIn = () => {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { logIn, error } = useAuth()\r\n\r\n    const handleLogIn = e => {\r\n        e.preventDefault()\r\n        logIn(emailRef.current.value, passwordRef.current.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography\r\n                        variant=\"h3\"\r\n                        sx={{ textAlign: 'center' }}>\r\n                        Log In\r\n                    </Typography>\r\n                    { error && \r\n                        <Alert \r\n                            severity=\"error\"\r\n                            sx={{ marginTop: '20px' }}>\r\n                            { error }\r\n                        </Alert> \r\n                    }\r\n                    <form onSubmit={ handleLogIn }>\r\n                        <FormGroup \r\n                            id=\"email\"\r\n                            sx={{ marginTop: '20px' }}>\r\n                            <FormLabel>\r\n                                Email\r\n                            </FormLabel>\r\n                            <TextField\r\n                                type=\"email\"\r\n                                sx={{ marginTop: '10px' }}\r\n                                inputRef={ emailRef }\r\n                                variant=\"standard\"\r\n                                required />\r\n                        </FormGroup>\r\n                        <FormGroup \r\n                            id=\"password\"\r\n                            sx={{ marginTop: '20px' }}>\r\n                            <FormLabel>\r\n                                Password\r\n                            </FormLabel>\r\n                            <TextField\r\n                                type=\"password\"\r\n                                sx={{ marginTop: '10px' }}\r\n                                inputRef={ passwordRef }\r\n                                variant=\"standard\"\r\n                                required />\r\n                        </FormGroup>\r\n                        <Button \r\n                            fullWidth\r\n                            disableElevation\r\n                            sx={{ marginTop: '40px', paddingBlock: \"10px\" }}\r\n                            color=\"primary\"\r\n                            variant=\"outlined\"\r\n                            type=\"submit\">\r\n                            Log In\r\n                        </Button>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n            <Typography\r\n                variant=\"body1\"\r\n                sx={{ \r\n                    textAlign: 'center',\r\n                    margin: 0,\r\n                    marginTop: '20px'\r\n                }}>\r\n                Don't have an account? <Link to={ signUp }>Sign Up</Link> \r\n            </Typography>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LogIn\r\n","import React from 'react'\r\nimport { \r\n    Container,\r\n    Box\r\n} from '@mui/material';\r\nimport SignUp from \"./SignUp\";\r\nimport LogIn from \"./LogIn\";\r\nimport { useLocation } from 'react-router-dom'\r\nimport { signUp } from '../constants/routes'\r\n\r\nconst SignUpLogInContainer = () => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <Container\r\n            sx={{ \r\n                display: \"flex\",\r\n                alignItems:\"center\",\r\n                justifyContent: \"center\",\r\n                minHeight: \"100vh\"\r\n            }}>\r\n            <Box\r\n                sx={{ \r\n                    marginBlock: '40px',\r\n                    width: '100%',\r\n                    maxWidth: '500px'\r\n                }}>\r\n                    { location.pathname === signUp ? <SignUp /> : <LogIn /> }\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SignUpLogInContainer\r\n","import React from 'react'\r\nimport { Outlet, Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { logIn } from '../constants/routes'\r\n\r\nconst PrivateRoute = () => {\r\n    const { currentUser } = useAuth()\r\n\r\n    return (\r\n        currentUser ? <Outlet /> : <Navigate to={ logIn } />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React from 'react'\r\nimport { Outlet, Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { lobby } from '../constants/routes'\r\n\r\nconst NonPrivateRoute = () => {\r\n    const { currentUser } = useAuth()\r\n\r\n    return (\r\n        currentUser ? <Navigate to={ lobby } /> : <Outlet />\r\n    )\r\n}\r\n\r\nexport default NonPrivateRoute\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { \n  BrowserRouter,\n  Route, \n  Routes\n} from 'react-router-dom'\nimport Lobby from \"./components/Lobby\";\nimport SignUpLogInContainer from \"./components/SignUpLogInContainer\";\nimport './index.css'\nimport { AuthProvider } from './contexts/AuthContext'\nimport {\n  logIn,\n  signUp,\n  lobby\n} from './constants/routes'\nimport PrivateRoute from './components/PrivateRoute'\nimport NonPrivateRoute from './components/NonPrivateRoute'\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: ['Raleway']\n  }})\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <AuthProvider>\n          <Routes>\n            <Route exact path={ lobby } element={ <PrivateRoute /> }>\n              <Route exact path={ lobby } element={ <Lobby /> }/>\n            </Route>\n            <Route exact path={ signUp } element={ <NonPrivateRoute /> }>\n              <Route exact path={ signUp } element={ <SignUpLogInContainer /> }/>\n            </Route>\n            <Route exact path={ logIn } element={ <NonPrivateRoute /> }>\n              <Route exact path={ logIn } element={ <SignUpLogInContainer /> }/>\n            </Route>\n          </Routes>\n        </AuthProvider>\n      </BrowserRouter>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}